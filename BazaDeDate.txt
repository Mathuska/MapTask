onst [undoStack, setUndoStack] = useState<any[]>([]);
const undoBtn = () => {
    console.log(undoStack);
    
    if (undoStack.length > 0) {
      const prevState = undoStack.pop();
      setMarkers(prevState.markers);
      setLines(prevState.lines);
      setPolygons(prevState.polygons);
      setPathsCoord(prevState.pathsCoord);
      setPolygonPathsCoord(prevState.polygonPathsCoord);
      setCountOfMarkers(prevState.countOfMarkers);
      setCountOfPolygons(prevState.countOfPolygons);
    }
  };


    const prevState = {
        markers: [...markers],
        lines: [...lines],
        polygons: [...polygons],
        pathsCoord: [...pathsCoord],
        polygonPathsCoord: [...polygonPathsCoord],
        countOfMarkers,
        countOfPolygons,
      };
  
      setUndoStack([...undoStack, prevState]);\












const addLine = (polyCoordinates: google.maps.LatLngLiteral[]) => {
  addLastLine();

  if (mapRef.current) {
    const existingLine = lines[0]; 

    if (existingLine) {
      existingLine.setPath(polyCoordinates.map(coord => new google.maps.LatLng(coord.lat, coord.lng)));
    } else {
      const line = new window.google.maps.Polyline({
        path: polyCoordinates,
        strokeColor: "#000000",
        strokeOpacity: 1.0,
        draggable: true,
        strokeWeight: 2,
      });

      line.setMap(mapRef.current);
      setLines((prevLines) => [...prevLines, line]);
    }
  }
};